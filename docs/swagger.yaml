basePath: /v1
definitions:
  tools.MetaData:
    properties:
      limit:
        type: integer
      offset:
        type: integer
      total_amount:
        type: integer
    type: object
  tools.ResponseArrayData:
    properties:
      data: {}
      meta_data:
        $ref: '#/definitions/tools.MetaData'
    type: object
  tools.ResponseData:
    properties:
      data: {}
    type: object
  tools.ResponseError:
    properties:
      error:
        type: string
    type: object
  v1.TotalPoolsStatistic:
    properties:
      avg_performance_score:
        type: integer
      max_performance_score:
        type: integer
      min_performance_score:
        type: integer
      network_apy:
        type: number
      pools:
        type: integer
      pools_max_apy:
        type: number
      skipped_slot:
        type: number
      total_active_stake:
        type: number
      total_active_stake_pool:
        type: number
      total_supply:
        type: number
      total_unstake_liquidity:
        type: number
      total_validators:
        type: integer
      usd:
        type: number
    type: object
  v1.coin:
    properties:
      address:
        type: string
      de_fi:
        additionalProperties:
          items:
            $ref: '#/definitions/v1.deFi'
          type: array
        type: object
      large_image:
        type: string
      name:
        type: string
      small_image:
        type: string
      thumb_image:
        type: string
      usd:
        type: number
    type: object
  v1.deFi:
    properties:
      apy:
        type: number
      buy_coin:
        $ref: '#/definitions/v1.coin'
      liquidity:
        type: number
      liquidity_pool:
        $ref: '#/definitions/v1.liquidityPool'
    type: object
  v1.epoch:
    properties:
      end_epoch:
        type: string
      epoch:
        type: integer
      progress:
        type: integer
      slots_in_epoch:
        type: integer
      sps:
        type: number
    type: object
  v1.governance:
    properties:
      blockchain:
        type: string
      circulating_supply:
        type: number
      contract_address:
        type: string
      image:
        type: string
      maximum_token_supply:
        type: number
      name:
        type: string
      symbol:
        type: string
      usd:
        type: number
      vote_url:
        type: string
      web_site_url:
        type: string
    type: object
  v1.liquidityPool:
    properties:
      about:
        type: string
      image:
        type: string
      name:
        type: string
      url:
        type: string
    type: object
  v1.pool:
    properties:
      active_stake:
        type: number
      address:
        type: string
      apy:
        type: number
      avg_score:
        type: integer
      avg_skipped_slots:
        type: number
      currency:
        type: string
      delinquent:
        type: integer
      deposit_fee:
        type: number
      image:
        type: string
      name:
        type: string
      rewards_fee:
        type: number
      staking_accounts:
        type: integer
      tokens_supply:
        type: number
      total_sol:
        type: number
      unstake_liquidity:
        type: number
      validators:
        type: integer
      withdrawal_fee:
        type: number
    type: object
  v1.poolMainPage:
    properties:
      active_stake:
        type: number
      address:
        type: string
      apy:
        type: number
      avg_score:
        type: integer
      avg_skipped_slots:
        type: number
      currency:
        type: string
      delinquent:
        type: integer
      deposit_fee:
        type: number
      image:
        type: string
      name:
        type: string
      rewards_fee:
        type: number
      staking_accounts:
        type: integer
      tokens_supply:
        type: number
      total_sol:
        type: number
      unstake_liquidity:
        type: number
      validators:
        type: integer
      withdrawal_fee:
        type: number
    type: object
  v1.poolStatistic:
    properties:
      active_stake:
        type: number
      apy:
        type: number
      created_at:
        type: string
      delinquent:
        type: integer
      number_of_validators:
        type: integer
      tokens_supply:
        type: number
      total_sol:
        type: number
      unstacked_liquidity:
        type: number
    type: object
  v1.validator:
    properties:
      apy:
        type: number
      data_center:
        type: string
      delinquent:
        type: boolean
      epoch:
        type: integer
      fee:
        type: number
      image:
        type: string
      name:
        type: string
      node_pk:
        type: string
      score:
        type: integer
      skipped_slots:
        type: number
      staking_accounts:
        type: integer
      total_active_stake:
        type: number
      vote_pk:
        type: string
    type: object
  v1.validatorData:
    properties:
      apy:
        type: number
      data_center:
        type: string
      fee:
        type: number
      image:
        type: string
      name:
        type: string
      node_pk:
        type: string
      pool_active_stake:
        type: number
      score:
        type: integer
      skipped_slots:
        type: number
      staking_accounts:
        type: integer
      total_active_stake:
        type: number
      vote_pk:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /coins:
    get:
      consumes:
      - application/json
      description: The information on tokens with the specified search parameters.
      parameters:
      - default: 0
        description: offset for aggregation
        in: query
        name: offset
        required: true
        type: number
      - default: 10
        description: limit for aggregation
        in: query
        name: limit
        required: true
        type: number
      - description: coin name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            allOf:
            - $ref: '#/definitions/tools.ResponseArrayData'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.coin'
                  type: array
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "404":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/tools.ResponseError'
        default:
          description: default response
          schema:
            $ref: '#/definitions/tools.ResponseError'
      summary: RestAPI
      tags:
      - coin
  /epoch:
    get:
      consumes:
      - application/json
      description: The current epoch value is returned.
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            allOf:
            - $ref: '#/definitions/tools.ResponseData'
            - properties:
                data:
                  $ref: '#/definitions/v1.epoch'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "404":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/tools.ResponseError'
        default:
          description: default response
          schema:
            $ref: '#/definitions/tools.ResponseError'
      summary: RestAPI
      tags:
      - epoch
  /governance:
    get:
      consumes:
      - application/json
      description: get governance
      parameters:
      - description: governance name
        in: query
        name: name
        type: string
      - default: price
        description: sort param
        enum:
        - price
        - name
        in: query
        name: sort
        type: string
      - default: true
        description: desc
        in: query
        name: desc
        type: boolean
      - default: 0
        description: offset for aggregation
        in: query
        name: offset
        required: true
        type: number
      - default: 10
        description: limit for aggregation
        in: query
        name: limit
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            allOf:
            - $ref: '#/definitions/tools.ResponseArrayData'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.governance'
                  type: array
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "404":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/tools.ResponseError'
        default:
          description: default response
          schema:
            $ref: '#/definitions/tools.ResponseError'
      summary: RestAPI
      tags:
      - governance
  /liquidity-pools:
    get:
      consumes:
      - application/json
      description: This Liquidity Pools list with search by name.
      parameters:
      - description: The name of the pool without strict observance of the case.
        in: query
        name: name
        type: string
      - default: 0
        description: offset for aggregation
        in: query
        name: offset
        required: true
        type: number
      - default: 10
        description: limit for aggregation
        in: query
        name: limit
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            allOf:
            - $ref: '#/definitions/tools.ResponseArrayData'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.liquidityPool'
                  type: array
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "404":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/tools.ResponseError'
        default:
          description: default response
          schema:
            $ref: '#/definitions/tools.ResponseError'
      summary: RestAPI
      tags:
      - pool
  /pool-coins:
    get:
      consumes:
      - application/json
      description: The information about pool tokens with the specified search parameters.
      parameters:
      - description: coin name
        in: query
        name: name
        type: string
      - default: price
        description: sort param
        enum:
        - price
        - name
        in: query
        name: sort
        type: string
      - default: true
        description: desc
        in: query
        name: desc
        type: boolean
      - default: 0
        description: offset for aggregation
        in: query
        name: offset
        required: true
        type: number
      - default: 10
        description: limit for aggregation
        in: query
        name: limit
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            allOf:
            - $ref: '#/definitions/tools.ResponseArrayData'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.coin'
                  type: array
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "404":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/tools.ResponseError'
        default:
          description: default response
          schema:
            $ref: '#/definitions/tools.ResponseError'
      summary: RestAPI
      tags:
      - coin
  /pool-statistic:
    get:
      consumes:
      - application/json
      description: The pool statistic for the specified aggregation.
      parameters:
      - default: Eversol
        description: Name of the pool with strict observance of the case.
        in: query
        name: name
        required: true
        type: string
      - description: Type of data aggregation for a time period
        enum:
        - week
        - month
        - quarter
        - half-year
        - year
        in: query
        name: aggregation
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            allOf:
            - $ref: '#/definitions/tools.ResponseData'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.poolStatistic'
                  type: array
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "404":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/tools.ResponseError'
        default:
          description: default response
          schema:
            $ref: '#/definitions/tools.ResponseError'
      summary: RestAPI
      tags:
      - pool
  /pool-validators/{pname}:
    get:
      consumes:
      - application/json
      description: This list with pool's validators.
      parameters:
      - default: Eversol
        description: Name of the pool with strict observance of the case.
        in: path
        name: pname
        required: true
        type: string
      - description: The name of the validatorData without strict observance of the
          case.
        in: query
        name: vname
        type: string
      - default: 10
        description: Epoch aggregation.
        enum:
        - 1
        - 10
        in: query
        name: epoch
        type: number
      - default: apy
        description: sort param
        enum:
        - apy
        - pool stake
        - stake
        - fee
        - score
        - skipped slot
        - data center
        in: query
        name: sort
        type: string
      - default: true
        description: desc
        in: query
        name: desc
        type: boolean
      - default: 0
        description: offset for aggregation
        in: query
        name: offset
        required: true
        type: number
      - default: 10
        description: limit for aggregation
        in: query
        name: limit
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            allOf:
            - $ref: '#/definitions/tools.ResponseArrayData'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.validatorData'
                  type: array
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "404":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/tools.ResponseError'
        default:
          description: default response
          schema:
            $ref: '#/definitions/tools.ResponseError'
      summary: RestAPI
      tags:
      - validatorData
  /pool/{name}:
    get:
      consumes:
      - application/json
      description: Creates a WS request to get server data for the pool with the pool
        name specified in the request.
      parameters:
      - default: Eversol
        description: Name of the pool with strict observance of the case.
        in: path
        name: name
        required: true
        type: string
      - default: 10
        description: Epoch aggregation.
        enum:
        - 1
        - 10
        in: query
        name: epoch
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            allOf:
            - $ref: '#/definitions/tools.ResponseData'
            - properties:
                data:
                  $ref: '#/definitions/v1.pool'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "404":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/tools.ResponseError'
        default:
          description: default response
          schema:
            $ref: '#/definitions/tools.ResponseError'
      summary: WebSocket
      tags:
      - pool
  /pools:
    get:
      consumes:
      - application/json
      description: This Pools list with ability to sort & search by name.
      parameters:
      - description: The name of the pool without strict observance of the case.
        in: query
        name: name
        type: string
      - default: 10
        description: Epoch aggregation.
        enum:
        - 1
        - 10
        in: query
        name: epoch
        required: true
        type: number
      - default: apy
        description: The parameter by the value of which the pools will be sorted.
        enum:
        - apy
        - pool stake
        - validators
        - score
        - skipped slot
        - token price
        in: query
        name: sort
        type: string
      - default: true
        description: Sort in descending order
        in: query
        name: desc
        type: boolean
      - default: 0
        description: offset for aggregation
        in: query
        name: offset
        required: true
        type: number
      - default: 10
        description: limit for aggregation
        in: query
        name: limit
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            allOf:
            - $ref: '#/definitions/tools.ResponseArrayData'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.poolMainPage'
                  type: array
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "404":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/tools.ResponseError'
        default:
          description: default response
          schema:
            $ref: '#/definitions/tools.ResponseError'
      summary: RestAPI
      tags:
      - pool
  /pools-statistic:
    get:
      consumes:
      - application/json
      description: Creates a WS request to get current statistics.
      parameters:
      - default: 10
        description: Epoch aggregation.
        enum:
        - 1
        - 10
        in: query
        name: epoch
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            allOf:
            - $ref: '#/definitions/tools.ResponseData'
            - properties:
                data:
                  $ref: '#/definitions/v1.TotalPoolsStatistic'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "404":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/tools.ResponseError'
        default:
          description: default response
          schema:
            $ref: '#/definitions/tools.ResponseError'
      summary: WebSocket
      tags:
      - pool
  /validators:
    get:
      consumes:
      - application/json
      description: This list with all Solana's validators.
      parameters:
      - description: The name of the validatorData without strict observance of the
          case.
        in: query
        name: name
        type: string
      - default: 10
        description: Epoch aggregation.
        enum:
        - 1
        - 10
        in: query
        name: epoch
        type: number
      - collectionFormat: multi
        description: Epochs for filter.
        in: query
        items:
          type: number
        name: epochs
        type: array
      - default: apy
        description: sort param
        enum:
        - apy
        - stake
        - fee
        - score
        - skipped slot
        - data center
        in: query
        name: sort
        type: string
      - default: true
        description: desc
        in: query
        name: desc
        type: boolean
      - default: 0
        description: offset for aggregation
        in: query
        name: offset
        required: true
        type: number
      - default: 10
        description: limit for aggregation
        in: query
        name: limit
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            allOf:
            - $ref: '#/definitions/tools.ResponseArrayData'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.validator'
                  type: array
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "404":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/tools.ResponseError'
        default:
          description: default response
          schema:
            $ref: '#/definitions/tools.ResponseError'
      summary: RestAPI
      tags:
      - validatorData
swagger: "2.0"
x-extension-openapi:
  example: value on a json format
