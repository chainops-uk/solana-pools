basePath: /v1
definitions:
  tools.MetaData:
    properties:
      limit:
        type: integer
      offset:
        type: integer
      total_amount:
        type: integer
    type: object
  tools.ResponseArrayData:
    properties:
      data: {}
      meta_data:
        $ref: '#/definitions/tools.MetaData'
    type: object
  tools.ResponseData:
    properties:
      data: {}
    type: object
  tools.ResponseError:
    properties:
      error:
        type: string
    type: object
  v1.TotalPoolsStatistic:
    properties:
      avg_performance_score:
        type: integer
      max_performance_score:
        type: integer
      min_performance_score:
        type: integer
      network_apy:
        type: number
      pools:
        type: integer
      pools_avg_apy:
        type: number
      skipped_slot:
        type: number
      total_active_stake:
        type: number
      total_active_stake_pool:
        type: number
      total_supply:
        type: number
      total_unstake_liquidity:
        type: number
      total_validators:
        type: integer
      usd:
        type: number
    type: object
  v1.coin:
    properties:
      address:
        type: string
      de_fi:
        items:
          $ref: '#/definitions/v1.deFi'
        type: array
      large_image:
        type: string
      name:
        type: string
      small_image:
        type: string
      thumb_image:
        type: string
      usd:
        type: number
    type: object
  v1.deFi:
    properties:
      apy:
        type: number
      buyCoin:
        $ref: '#/definitions/v1.coin'
      liquidity:
        type: number
      liquidityPool:
        $ref: '#/definitions/v1.liquidityPool'
    type: object
  v1.epoch:
    properties:
      end_epoch:
        type: string
      epoch:
        type: integer
      progress:
        type: integer
      slots_in_epoch:
        type: integer
      sps:
        type: number
    type: object
  v1.governance:
    properties:
      blockchain:
        type: string
      circulating_supply:
        type: number
      contract_address:
        type: string
      image:
        type: string
      maximum_token_supply:
        type: number
      name:
        type: string
      usd:
        type: number
    type: object
  v1.liquidityPool:
    properties:
      image:
        type: string
      name:
        type: string
      url:
        type: string
    type: object
  v1.pool:
    properties:
      active_stake:
        type: number
      address:
        type: string
      apy:
        type: number
      avg_score:
        type: integer
      avg_skipped_slots:
        type: number
      currency:
        type: string
      delinquent:
        type: number
      depossit_fee:
        type: number
      image:
        type: string
      name:
        type: string
      rewards_fee:
        type: number
      staking_accounts:
        type: integer
      tokens_supply:
        type: number
      unstake_liquidity:
        type: number
      withdrawal_fee:
        type: number
    type: object
  v1.poolMainPage:
    properties:
      active_stake:
        type: number
      address:
        type: string
      apy:
        type: number
      avg_score:
        type: integer
      avg_skipped_slots:
        type: number
      currency:
        type: string
      delinquent:
        type: number
      depossit_fee:
        type: number
      image:
        type: string
      name:
        type: string
      rewards_fee:
        type: number
      staking_accounts:
        type: integer
      tokens_supply:
        type: number
      unstake_liquidity:
        type: number
      validators:
        type: integer
      withdrawal_fee:
        type: number
    type: object
  v1.poolStatistic:
    properties:
      active_stake:
        type: number
      apy:
        type: number
      created_at:
        type: string
      number_of_validators:
        type: integer
      unstacked_liquidity:
        type: number
    type: object
  v1.validator:
    properties:
      apy:
        type: number
      data_center:
        type: string
      fee:
        type: number
      image:
        type: string
      name:
        type: string
      node_pk:
        type: string
      pool_active_stake:
        type: number
      score:
        type: integer
      skipped_slots:
        type: number
      total_active_stake:
        type: number
      vote_pk:
        type: string
    type: object
info:
  contact: {}
paths:
  /coins:
    get:
      consumes:
      - application/json
      description: get coins
      parameters:
      - default: 0
        description: offset for aggregation
        in: query
        name: offset
        required: true
        type: number
      - default: 10
        description: limit for aggregation
        in: query
        name: limit
        required: true
        type: number
      - description: stake-pool name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            allOf:
            - $ref: '#/definitions/tools.ResponseData'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.coin'
                  type: array
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "404":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/tools.ResponseError'
        default:
          description: default response
          schema:
            $ref: '#/definitions/tools.ResponseError'
      summary: RestAPI
  /epoch:
    get:
      consumes:
      - application/json
      description: get epoch
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            allOf:
            - $ref: '#/definitions/tools.ResponseData'
            - properties:
                data:
                  $ref: '#/definitions/v1.epoch'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "404":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/tools.ResponseError'
        default:
          description: default response
          schema:
            $ref: '#/definitions/tools.ResponseError'
      summary: RestAPI
  /governance:
    get:
      consumes:
      - application/json
      description: get governance
      parameters:
      - default: 0
        description: offset for aggregation
        in: query
        name: offset
        required: true
        type: number
      - default: 10
        description: limit for aggregation
        in: query
        name: limit
        required: true
        type: number
      - description: stake-pool name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            allOf:
            - $ref: '#/definitions/tools.ResponseData'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.governance'
                  type: array
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "404":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/tools.ResponseError'
        default:
          description: default response
          schema:
            $ref: '#/definitions/tools.ResponseError'
      summary: RestAPI
  /pool-coins:
    get:
      consumes:
      - application/json
      description: get pools coins
      parameters:
      - default: 0
        description: offset for aggregation
        in: query
        name: offset
        required: true
        type: number
      - default: 10
        description: limit for aggregation
        in: query
        name: limit
        required: true
        type: number
      - description: stake-pool name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            allOf:
            - $ref: '#/definitions/tools.ResponseData'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.coin'
                  type: array
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "404":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/tools.ResponseError'
        default:
          description: default response
          schema:
            $ref: '#/definitions/tools.ResponseError'
      summary: RestAPI
  /pool-statistic:
    get:
      consumes:
      - application/json
      description: get statistic by pool
      parameters:
      - default: Marinade
        description: pool name
        in: query
        name: name
        required: true
        type: string
      - description: aggregation
        enum:
        - week
        - month
        - quarter
        - half-year
        - year
        in: query
        name: aggregation
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            allOf:
            - $ref: '#/definitions/tools.ResponseData'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.poolStatistic'
                  type: array
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "404":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/tools.ResponseError'
        default:
          description: default response
          schema:
            $ref: '#/definitions/tools.ResponseError'
      summary: RestAPI
  /pool-validators/{name}:
    get:
      consumes:
      - application/json
      description: get pool validators
      parameters:
      - default: marinade
        description: Pool name
        in: path
        name: name
        required: true
        type: string
      - default: 0
        description: offset for aggregation
        in: query
        name: offset
        required: true
        type: number
      - default: 10
        description: limit for aggregation
        in: query
        name: limit
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            allOf:
            - $ref: '#/definitions/tools.ResponseArrayData'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.validator'
                  type: array
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "404":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/tools.ResponseError'
        default:
          description: default response
          schema:
            $ref: '#/definitions/tools.ResponseError'
      summary: RestAPI
  /pool/{name}:
    get:
      consumes:
      - application/json
      description: get pool
      parameters:
      - default: Marinade
        description: Pool name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            allOf:
            - $ref: '#/definitions/tools.ResponseData'
            - properties:
                data:
                  $ref: '#/definitions/v1.pool'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "404":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/tools.ResponseError'
        default:
          description: default response
          schema:
            $ref: '#/definitions/tools.ResponseError'
      summary: WebSocket
  /pools:
    get:
      consumes:
      - application/json
      description: get pools
      parameters:
      - default: 0
        description: offset for aggregation
        in: query
        name: offset
        required: true
        type: number
      - default: 10
        description: limit for aggregation
        in: query
        name: limit
        required: true
        type: number
      - description: stake-pool name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            allOf:
            - $ref: '#/definitions/tools.ResponseArrayData'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.poolMainPage'
                  type: array
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "404":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/tools.ResponseError'
        default:
          description: default response
          schema:
            $ref: '#/definitions/tools.ResponseError'
      summary: RestAPI
  /pools-statistic:
    get:
      consumes:
      - application/json
      description: get statistic
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            allOf:
            - $ref: '#/definitions/tools.ResponseData'
            - properties:
                data:
                  $ref: '#/definitions/v1.TotalPoolsStatistic'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "404":
          description: bad request
          schema:
            $ref: '#/definitions/tools.ResponseError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/tools.ResponseError'
        default:
          description: default response
          schema:
            $ref: '#/definitions/tools.ResponseError'
      summary: WebSocket
swagger: "2.0"
